/*
 * inpost.cpp
 *
 *  Created on: 27-Dec-2017
 *      Author: e2002
 */

#include "inpost.h"
#include "stack.h"
#include <string>
#include <iostream>
using namespace std;

int inpost ::  isoperator(char x)
{
	if(x=='(' || x=='/' || x=='*' || x=='+' || x=='-' || x=='^')
		return 1;

	else
		return 0;
}

int inpost ::  priority(char x)
{
	if(x=='^')
		return 4;

	else if(x=='/' || x=='*')
		return 3;

	else if(x=='+' || x=='-')
		return 2;

	//else if(x=='(')
		//return 1;

	else return -1;

}

void inpost :: infix_to_postfix(string arr,stack s)
{
	int len=arr.length(),k=0;

		for(int i=0;i<len;i++)
		{
			char x=arr[i];

			if( (x>='A' && x<='Z') || (x>='a' && x<='z') )
			{
				cout<<""<<x;
			}

			else if(x=='(')
						s.push(x);

			else if(x==')')
					{
						while(s.tope() != '(')
						{
							cout<<""<<s.pop();
						}

						s.pop();

					}

			else
			{
				if(s.isempty())
					s.push(x);

				else
				{

					while( post.priority(s.tope()) >= post.priority(x) )
					{
						cout<<""<<s.pop();

					}

					s.push(x);
				}
			}

		}

		while(!s.isempty())
				{
						cout<<""<<s.pop();
				}

		cout<<endl;
}

